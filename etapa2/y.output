Terminals unused in grammar

    TOKEN_ERROR


State 12 conflicts: 8 shift/reduce, 1 reduce/reduce
State 32 conflicts: 8 shift/reduce, 1 reduce/reduce
State 98 conflicts: 8 shift/reduce
State 123 conflicts: 8 shift/reduce
State 133 conflicts: 1 shift/reduce
State 139 conflicts: 8 shift/reduce
State 146 conflicts: 8 shift/reduce


Grammar

    0 $accept: programa $end

    1 programa: dec_lst

    2 dec_lst: dec ';' dec_lst
    3        | %empty

    4 dec: var_dec
    5    | foo_dec

    6 var_dec: TK_IDENTIFIER '=' var_type ':' init_lits
    7        | TK_IDENTIFIER '=' var_type '[' LIT_INTEGER ']' vec_def

    8 var_type: KW_BOOL
    9         | KW_INT
   10         | KW_FLOAT
   11         | KW_CHAR

   12 init_lits: LIT_CHAR
   13          | LIT_FALSE
   14          | LIT_TRUE
   15          | LIT_FLOAT
   16          | LIT_INTEGER

   17 vec_def: ':' init_lits vec_def_lst
   18        | %empty

   19 vec_def_lst: init_lits vec_def_lst
   20            | %empty

   21 foo_dec: foo_header block

   22 foo_header: TK_IDENTIFIER '(' ')' '=' var_type
   23           | TK_IDENTIFIER '(' foo_arg foo_header_lst ')' '=' var_type

   24 foo_header_lst: ',' foo_arg foo_header_lst
   25               | %empty

   26 foo_arg: TK_IDENTIFIER '=' var_type

   27 block: '{' cmd_lst '}'

   28 cmd_lst: cmd cmd_lst
   29        | %empty

   30 cmd: TK_IDENTIFIER '=' expr
   31    | TK_IDENTIFIER '[' expr ']' '=' expr
   32    | KW_READ TK_IDENTIFIER
   33    | KW_PRINT printable print_lst
   34    | KW_RETURN expr
   35    | flow_cmd
   36    | block
   37    | %empty

   38 printable: LIT_STRING
   39          | expr

   40 print_lst: ',' printable print_lst
   41          | %empty

   42 flow_cmd: KW_IF '(' expr ')' KW_THEN cmd
   43         | KW_IF '(' expr ')' KW_THEN cmd KW_ELSE cmd
   44         | KW_WHILE '(' expr ')' cmd
   45         | KW_LOOP '(' TK_IDENTIFIER ':' expr ',' expr ',' expr ')' cmd

   46 expr: TK_IDENTIFIER
   47     | TK_IDENTIFIER '[' expr ']'
   48     | LIT_INTEGER
   49     | LIT_FLOAT
   50     | LIT_FALSE
   51     | LIT_TRUE
   52     | LIT_CHAR
   53     | expr '+' expr
   54     | expr '-' expr
   55     | expr '*' expr
   56     | expr '/' expr
   57     | expr OPERATOR_EQ expr
   58     | expr OPERATOR_GE expr
   59     | expr OPERATOR_LE expr
   60     | expr OPERATOR_DIF expr
   61     | expr '>' expr
   62     | expr '<' expr
   63     | expr '^' expr
   64     | expr '|' expr
   65     | expr '~' expr
   66     | '(' expr ')'
   67     | foo_call

   68 foo_call: TK_IDENTIFIER '(' ')'
   69         | TK_IDENTIFIER '(' foo_call_args ')'

   70 foo_call_args: expr foo_call_args_lst

   71 foo_call_args_lst: ',' expr foo_call_args_lst
   72                  | %empty


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 22 23 42 43 44 45 66 68 69
    ')' (41) 22 23 42 43 44 45 66 68 69
    '*' (42) 55
    '+' (43) 53
    ',' (44) 24 40 45 71
    '-' (45) 54
    '/' (47) 56
    ':' (58) 6 17 45
    ';' (59) 2
    '<' (60) 62
    '=' (61) 6 7 22 23 26 30 31
    '>' (62) 61
    '[' (91) 7 31 47
    ']' (93) 7 31 47
    '^' (94) 63
    '{' (123) 27
    '|' (124) 64
    '}' (125) 27
    '~' (126) 65
    error (256)
    KW_CHAR (258) 11
    KW_INT (259) 9
    KW_FLOAT (260) 10
    KW_BOOL (261) 8
    KW_IF (262) 42 43
    KW_THEN (263) 42 43
    KW_ELSE (264) 43
    KW_WHILE (265) 44
    KW_LOOP (266) 45
    KW_READ (267) 32
    KW_PRINT (268) 33
    KW_RETURN (269) 34
    OPERATOR_LE (270) 59
    OPERATOR_GE (271) 58
    OPERATOR_EQ (272) 57
    OPERATOR_DIF (273) 60
    TK_IDENTIFIER (274) 6 7 22 23 26 30 31 32 45 46 47 68 69
    LIT_INTEGER (275) 7 16 48
    LIT_FLOAT (276) 15 49
    LIT_TRUE (277) 14 51
    LIT_FALSE (278) 13 50
    LIT_CHAR (279) 12 52
    LIT_STRING (280) 38
    TOKEN_ERROR (281)


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    programa (47)
        on left: 1
        on right: 0
    dec_lst (48)
        on left: 2 3
        on right: 1 2
    dec (49)
        on left: 4 5
        on right: 2
    var_dec (50)
        on left: 6 7
        on right: 4
    var_type (51)
        on left: 8 9 10 11
        on right: 6 7 22 23 26
    init_lits (52)
        on left: 12 13 14 15 16
        on right: 6 17 19
    vec_def (53)
        on left: 17 18
        on right: 7
    vec_def_lst (54)
        on left: 19 20
        on right: 17 19
    foo_dec (55)
        on left: 21
        on right: 5
    foo_header (56)
        on left: 22 23
        on right: 21
    foo_header_lst (57)
        on left: 24 25
        on right: 23 24
    foo_arg (58)
        on left: 26
        on right: 23 24
    block (59)
        on left: 27
        on right: 21 36
    cmd_lst (60)
        on left: 28 29
        on right: 27 28
    cmd (61)
        on left: 30 31 32 33 34 35 36 37
        on right: 28 42 43 44 45
    printable (62)
        on left: 38 39
        on right: 33 40
    print_lst (63)
        on left: 40 41
        on right: 33 40
    flow_cmd (64)
        on left: 42 43 44 45
        on right: 35
    expr (65)
        on left: 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67
        on right: 30 31 34 39 42 43 44 45 47 53 54 55 56 57 58 59 60 61 62 63 64 65 66 70 71
    foo_call (66)
        on left: 68 69
        on right: 67
    foo_call_args (67)
        on left: 70
        on right: 69
    foo_call_args_lst (68)
        on left: 71 72
        on right: 70 71


State 0

    0 $accept: . programa $end

    TK_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 3 (dec_lst)

    programa    go to state 2
    dec_lst     go to state 3
    dec         go to state 4
    var_dec     go to state 5
    foo_dec     go to state 6
    foo_header  go to state 7


State 1

    6 var_dec: TK_IDENTIFIER . '=' var_type ':' init_lits
    7        | TK_IDENTIFIER . '=' var_type '[' LIT_INTEGER ']' vec_def
   22 foo_header: TK_IDENTIFIER . '(' ')' '=' var_type
   23           | TK_IDENTIFIER . '(' foo_arg foo_header_lst ')' '=' var_type

    '='  shift, and go to state 8
    '('  shift, and go to state 9


State 2

    0 $accept: programa . $end

    $end  shift, and go to state 10


State 3

    1 programa: dec_lst .

    $default  reduce using rule 1 (programa)


State 4

    2 dec_lst: dec . ';' dec_lst

    ';'  shift, and go to state 11


State 5

    4 dec: var_dec .

    $default  reduce using rule 4 (dec)


State 6

    5 dec: foo_dec .

    $default  reduce using rule 5 (dec)


State 7

   21 foo_dec: foo_header . block

    '{'  shift, and go to state 12

    block  go to state 13


State 8

    6 var_dec: TK_IDENTIFIER '=' . var_type ':' init_lits
    7        | TK_IDENTIFIER '=' . var_type '[' LIT_INTEGER ']' vec_def

    KW_CHAR   shift, and go to state 14
    KW_INT    shift, and go to state 15
    KW_FLOAT  shift, and go to state 16
    KW_BOOL   shift, and go to state 17

    var_type  go to state 18


State 9

   22 foo_header: TK_IDENTIFIER '(' . ')' '=' var_type
   23           | TK_IDENTIFIER '(' . foo_arg foo_header_lst ')' '=' var_type

    TK_IDENTIFIER  shift, and go to state 19
    ')'            shift, and go to state 20

    foo_arg  go to state 21


State 10

    0 $accept: programa $end .

    $default  accept


State 11

    2 dec_lst: dec ';' . dec_lst

    TK_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 3 (dec_lst)

    dec_lst     go to state 22
    dec         go to state 4
    var_dec     go to state 5
    foo_dec     go to state 6
    foo_header  go to state 7


State 12

   27 block: '{' . cmd_lst '}'

    KW_IF          shift, and go to state 23
    KW_WHILE       shift, and go to state 24
    KW_LOOP        shift, and go to state 25
    KW_READ        shift, and go to state 26
    KW_PRINT       shift, and go to state 27
    KW_RETURN      shift, and go to state 28
    TK_IDENTIFIER  shift, and go to state 29
    '{'            shift, and go to state 12

    KW_IF          [reduce using rule 37 (cmd)]
    KW_WHILE       [reduce using rule 37 (cmd)]
    KW_LOOP        [reduce using rule 37 (cmd)]
    KW_READ        [reduce using rule 37 (cmd)]
    KW_PRINT       [reduce using rule 37 (cmd)]
    KW_RETURN      [reduce using rule 37 (cmd)]
    TK_IDENTIFIER  [reduce using rule 37 (cmd)]
    '{'            [reduce using rule 37 (cmd)]
    '}'            reduce using rule 29 (cmd_lst)
    '}'            [reduce using rule 37 (cmd)]
    $default       reduce using rule 29 (cmd_lst)

    block     go to state 30
    cmd_lst   go to state 31
    cmd       go to state 32
    flow_cmd  go to state 33


State 13

   21 foo_dec: foo_header block .

    $default  reduce using rule 21 (foo_dec)


State 14

   11 var_type: KW_CHAR .

    $default  reduce using rule 11 (var_type)


State 15

    9 var_type: KW_INT .

    $default  reduce using rule 9 (var_type)


State 16

   10 var_type: KW_FLOAT .

    $default  reduce using rule 10 (var_type)


State 17

    8 var_type: KW_BOOL .

    $default  reduce using rule 8 (var_type)


State 18

    6 var_dec: TK_IDENTIFIER '=' var_type . ':' init_lits
    7        | TK_IDENTIFIER '=' var_type . '[' LIT_INTEGER ']' vec_def

    ':'  shift, and go to state 34
    '['  shift, and go to state 35


State 19

   26 foo_arg: TK_IDENTIFIER . '=' var_type

    '='  shift, and go to state 36


State 20

   22 foo_header: TK_IDENTIFIER '(' ')' . '=' var_type

    '='  shift, and go to state 37


State 21

   23 foo_header: TK_IDENTIFIER '(' foo_arg . foo_header_lst ')' '=' var_type

    ','  shift, and go to state 38

    $default  reduce using rule 25 (foo_header_lst)

    foo_header_lst  go to state 39


State 22

    2 dec_lst: dec ';' dec_lst .

    $default  reduce using rule 2 (dec_lst)


State 23

   42 flow_cmd: KW_IF . '(' expr ')' KW_THEN cmd
   43         | KW_IF . '(' expr ')' KW_THEN cmd KW_ELSE cmd

    '('  shift, and go to state 40


State 24

   44 flow_cmd: KW_WHILE . '(' expr ')' cmd

    '('  shift, and go to state 41


State 25

   45 flow_cmd: KW_LOOP . '(' TK_IDENTIFIER ':' expr ',' expr ',' expr ')' cmd

    '('  shift, and go to state 42


State 26

   32 cmd: KW_READ . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 43


State 27

   33 cmd: KW_PRINT . printable print_lst

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    LIT_STRING     shift, and go to state 50
    '('            shift, and go to state 51

    printable  go to state 52
    expr       go to state 53
    foo_call   go to state 54


State 28

   34 cmd: KW_RETURN . expr

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51

    expr      go to state 55
    foo_call  go to state 54


State 29

   30 cmd: TK_IDENTIFIER . '=' expr
   31    | TK_IDENTIFIER . '[' expr ']' '=' expr

    '='  shift, and go to state 56
    '['  shift, and go to state 57


State 30

   36 cmd: block .

    $default  reduce using rule 36 (cmd)


State 31

   27 block: '{' cmd_lst . '}'

    '}'  shift, and go to state 58


State 32

   28 cmd_lst: cmd . cmd_lst

    KW_IF          shift, and go to state 23
    KW_WHILE       shift, and go to state 24
    KW_LOOP        shift, and go to state 25
    KW_READ        shift, and go to state 26
    KW_PRINT       shift, and go to state 27
    KW_RETURN      shift, and go to state 28
    TK_IDENTIFIER  shift, and go to state 29
    '{'            shift, and go to state 12

    KW_IF          [reduce using rule 37 (cmd)]
    KW_WHILE       [reduce using rule 37 (cmd)]
    KW_LOOP        [reduce using rule 37 (cmd)]
    KW_READ        [reduce using rule 37 (cmd)]
    KW_PRINT       [reduce using rule 37 (cmd)]
    KW_RETURN      [reduce using rule 37 (cmd)]
    TK_IDENTIFIER  [reduce using rule 37 (cmd)]
    '{'            [reduce using rule 37 (cmd)]
    '}'            reduce using rule 29 (cmd_lst)
    '}'            [reduce using rule 37 (cmd)]
    $default       reduce using rule 29 (cmd_lst)

    block     go to state 30
    cmd_lst   go to state 59
    cmd       go to state 32
    flow_cmd  go to state 33


State 33

   35 cmd: flow_cmd .

    $default  reduce using rule 35 (cmd)


State 34

    6 var_dec: TK_IDENTIFIER '=' var_type ':' . init_lits

    LIT_INTEGER  shift, and go to state 60
    LIT_FLOAT    shift, and go to state 61
    LIT_TRUE     shift, and go to state 62
    LIT_FALSE    shift, and go to state 63
    LIT_CHAR     shift, and go to state 64

    init_lits  go to state 65


State 35

    7 var_dec: TK_IDENTIFIER '=' var_type '[' . LIT_INTEGER ']' vec_def

    LIT_INTEGER  shift, and go to state 66


State 36

   26 foo_arg: TK_IDENTIFIER '=' . var_type

    KW_CHAR   shift, and go to state 14
    KW_INT    shift, and go to state 15
    KW_FLOAT  shift, and go to state 16
    KW_BOOL   shift, and go to state 17

    var_type  go to state 67


State 37

   22 foo_header: TK_IDENTIFIER '(' ')' '=' . var_type

    KW_CHAR   shift, and go to state 14
    KW_INT    shift, and go to state 15
    KW_FLOAT  shift, and go to state 16
    KW_BOOL   shift, and go to state 17

    var_type  go to state 68


State 38

   24 foo_header_lst: ',' . foo_arg foo_header_lst

    TK_IDENTIFIER  shift, and go to state 19

    foo_arg  go to state 69


State 39

   23 foo_header: TK_IDENTIFIER '(' foo_arg foo_header_lst . ')' '=' var_type

    ')'  shift, and go to state 70


State 40

   42 flow_cmd: KW_IF '(' . expr ')' KW_THEN cmd
   43         | KW_IF '(' . expr ')' KW_THEN cmd KW_ELSE cmd

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51

    expr      go to state 71
    foo_call  go to state 54


State 41

   44 flow_cmd: KW_WHILE '(' . expr ')' cmd

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51

    expr      go to state 72
    foo_call  go to state 54


State 42

   45 flow_cmd: KW_LOOP '(' . TK_IDENTIFIER ':' expr ',' expr ',' expr ')' cmd

    TK_IDENTIFIER  shift, and go to state 73


State 43

   32 cmd: KW_READ TK_IDENTIFIER .

    $default  reduce using rule 32 (cmd)


State 44

   46 expr: TK_IDENTIFIER .
   47     | TK_IDENTIFIER . '[' expr ']'
   68 foo_call: TK_IDENTIFIER . '(' ')'
   69         | TK_IDENTIFIER . '(' foo_call_args ')'

    '['  shift, and go to state 74
    '('  shift, and go to state 75

    $default  reduce using rule 46 (expr)


State 45

   48 expr: LIT_INTEGER .

    $default  reduce using rule 48 (expr)


State 46

   49 expr: LIT_FLOAT .

    $default  reduce using rule 49 (expr)


State 47

   51 expr: LIT_TRUE .

    $default  reduce using rule 51 (expr)


State 48

   50 expr: LIT_FALSE .

    $default  reduce using rule 50 (expr)


State 49

   52 expr: LIT_CHAR .

    $default  reduce using rule 52 (expr)


State 50

   38 printable: LIT_STRING .

    $default  reduce using rule 38 (printable)


State 51

   66 expr: '(' . expr ')'

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51

    expr      go to state 76
    foo_call  go to state 54


State 52

   33 cmd: KW_PRINT printable . print_lst

    ','  shift, and go to state 77

    $default  reduce using rule 41 (print_lst)

    print_lst  go to state 78


State 53

   39 printable: expr .
   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . '^' expr
   64     | expr . '|' expr
   65     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    '|'           shift, and go to state 83
    '^'           shift, and go to state 84
    '~'           shift, and go to state 85
    '<'           shift, and go to state 86
    '>'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91

    $default  reduce using rule 39 (printable)


State 54

   67 expr: foo_call .

    $default  reduce using rule 67 (expr)


State 55

   34 cmd: KW_RETURN expr .
   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . '^' expr
   64     | expr . '|' expr
   65     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    '|'           shift, and go to state 83
    '^'           shift, and go to state 84
    '~'           shift, and go to state 85
    '<'           shift, and go to state 86
    '>'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91

    $default  reduce using rule 34 (cmd)


State 56

   30 cmd: TK_IDENTIFIER '=' . expr

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51

    expr      go to state 92
    foo_call  go to state 54


State 57

   31 cmd: TK_IDENTIFIER '[' . expr ']' '=' expr

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51

    expr      go to state 93
    foo_call  go to state 54


State 58

   27 block: '{' cmd_lst '}' .

    $default  reduce using rule 27 (block)


State 59

   28 cmd_lst: cmd cmd_lst .

    $default  reduce using rule 28 (cmd_lst)


State 60

   16 init_lits: LIT_INTEGER .

    $default  reduce using rule 16 (init_lits)


State 61

   15 init_lits: LIT_FLOAT .

    $default  reduce using rule 15 (init_lits)


State 62

   14 init_lits: LIT_TRUE .

    $default  reduce using rule 14 (init_lits)


State 63

   13 init_lits: LIT_FALSE .

    $default  reduce using rule 13 (init_lits)


State 64

   12 init_lits: LIT_CHAR .

    $default  reduce using rule 12 (init_lits)


State 65

    6 var_dec: TK_IDENTIFIER '=' var_type ':' init_lits .

    $default  reduce using rule 6 (var_dec)


State 66

    7 var_dec: TK_IDENTIFIER '=' var_type '[' LIT_INTEGER . ']' vec_def

    ']'  shift, and go to state 94


State 67

   26 foo_arg: TK_IDENTIFIER '=' var_type .

    $default  reduce using rule 26 (foo_arg)


State 68

   22 foo_header: TK_IDENTIFIER '(' ')' '=' var_type .

    $default  reduce using rule 22 (foo_header)


State 69

   24 foo_header_lst: ',' foo_arg . foo_header_lst

    ','  shift, and go to state 38

    $default  reduce using rule 25 (foo_header_lst)

    foo_header_lst  go to state 95


State 70

   23 foo_header: TK_IDENTIFIER '(' foo_arg foo_header_lst ')' . '=' var_type

    '='  shift, and go to state 96


State 71

   42 flow_cmd: KW_IF '(' expr . ')' KW_THEN cmd
   43         | KW_IF '(' expr . ')' KW_THEN cmd KW_ELSE cmd
   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . '^' expr
   64     | expr . '|' expr
   65     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    '|'           shift, and go to state 83
    '^'           shift, and go to state 84
    '~'           shift, and go to state 85
    '<'           shift, and go to state 86
    '>'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91
    ')'           shift, and go to state 97


State 72

   44 flow_cmd: KW_WHILE '(' expr . ')' cmd
   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . '^' expr
   64     | expr . '|' expr
   65     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    '|'           shift, and go to state 83
    '^'           shift, and go to state 84
    '~'           shift, and go to state 85
    '<'           shift, and go to state 86
    '>'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91
    ')'           shift, and go to state 98


State 73

   45 flow_cmd: KW_LOOP '(' TK_IDENTIFIER . ':' expr ',' expr ',' expr ')' cmd

    ':'  shift, and go to state 99


State 74

   47 expr: TK_IDENTIFIER '[' . expr ']'

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51

    expr      go to state 100
    foo_call  go to state 54


State 75

   68 foo_call: TK_IDENTIFIER '(' . ')'
   69         | TK_IDENTIFIER '(' . foo_call_args ')'

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51
    ')'            shift, and go to state 101

    expr           go to state 102
    foo_call       go to state 54
    foo_call_args  go to state 103


State 76

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . '^' expr
   64     | expr . '|' expr
   65     | expr . '~' expr
   66     | '(' expr . ')'

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    '|'           shift, and go to state 83
    '^'           shift, and go to state 84
    '~'           shift, and go to state 85
    '<'           shift, and go to state 86
    '>'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91
    ')'           shift, and go to state 104


State 77

   40 print_lst: ',' . printable print_lst

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    LIT_STRING     shift, and go to state 50
    '('            shift, and go to state 51

    printable  go to state 105
    expr       go to state 53
    foo_call   go to state 54


State 78

   33 cmd: KW_PRINT printable print_lst .

    $default  reduce using rule 33 (cmd)


State 79

   59 expr: expr OPERATOR_LE . expr

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51

    expr      go to state 106
    foo_call  go to state 54


State 80

   58 expr: expr OPERATOR_GE . expr

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51

    expr      go to state 107
    foo_call  go to state 54


State 81

   57 expr: expr OPERATOR_EQ . expr

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51

    expr      go to state 108
    foo_call  go to state 54


State 82

   60 expr: expr OPERATOR_DIF . expr

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51

    expr      go to state 109
    foo_call  go to state 54


State 83

   64 expr: expr '|' . expr

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51

    expr      go to state 110
    foo_call  go to state 54


State 84

   63 expr: expr '^' . expr

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51

    expr      go to state 111
    foo_call  go to state 54


State 85

   65 expr: expr '~' . expr

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51

    expr      go to state 112
    foo_call  go to state 54


State 86

   62 expr: expr '<' . expr

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51

    expr      go to state 113
    foo_call  go to state 54


State 87

   61 expr: expr '>' . expr

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51

    expr      go to state 114
    foo_call  go to state 54


State 88

   53 expr: expr '+' . expr

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51

    expr      go to state 115
    foo_call  go to state 54


State 89

   54 expr: expr '-' . expr

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51

    expr      go to state 116
    foo_call  go to state 54


State 90

   55 expr: expr '*' . expr

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51

    expr      go to state 117
    foo_call  go to state 54


State 91

   56 expr: expr '/' . expr

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51

    expr      go to state 118
    foo_call  go to state 54


State 92

   30 cmd: TK_IDENTIFIER '=' expr .
   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . '^' expr
   64     | expr . '|' expr
   65     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    '|'           shift, and go to state 83
    '^'           shift, and go to state 84
    '~'           shift, and go to state 85
    '<'           shift, and go to state 86
    '>'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91

    $default  reduce using rule 30 (cmd)


State 93

   31 cmd: TK_IDENTIFIER '[' expr . ']' '=' expr
   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . '^' expr
   64     | expr . '|' expr
   65     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    '|'           shift, and go to state 83
    '^'           shift, and go to state 84
    '~'           shift, and go to state 85
    '<'           shift, and go to state 86
    '>'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91
    ']'           shift, and go to state 119


State 94

    7 var_dec: TK_IDENTIFIER '=' var_type '[' LIT_INTEGER ']' . vec_def

    ':'  shift, and go to state 120

    $default  reduce using rule 18 (vec_def)

    vec_def  go to state 121


State 95

   24 foo_header_lst: ',' foo_arg foo_header_lst .

    $default  reduce using rule 24 (foo_header_lst)


State 96

   23 foo_header: TK_IDENTIFIER '(' foo_arg foo_header_lst ')' '=' . var_type

    KW_CHAR   shift, and go to state 14
    KW_INT    shift, and go to state 15
    KW_FLOAT  shift, and go to state 16
    KW_BOOL   shift, and go to state 17

    var_type  go to state 122


State 97

   42 flow_cmd: KW_IF '(' expr ')' . KW_THEN cmd
   43         | KW_IF '(' expr ')' . KW_THEN cmd KW_ELSE cmd

    KW_THEN  shift, and go to state 123


State 98

   44 flow_cmd: KW_WHILE '(' expr ')' . cmd

    KW_IF          shift, and go to state 23
    KW_WHILE       shift, and go to state 24
    KW_LOOP        shift, and go to state 25
    KW_READ        shift, and go to state 26
    KW_PRINT       shift, and go to state 27
    KW_RETURN      shift, and go to state 28
    TK_IDENTIFIER  shift, and go to state 29
    '{'            shift, and go to state 12

    KW_IF          [reduce using rule 37 (cmd)]
    KW_WHILE       [reduce using rule 37 (cmd)]
    KW_LOOP        [reduce using rule 37 (cmd)]
    KW_READ        [reduce using rule 37 (cmd)]
    KW_PRINT       [reduce using rule 37 (cmd)]
    KW_RETURN      [reduce using rule 37 (cmd)]
    TK_IDENTIFIER  [reduce using rule 37 (cmd)]
    '{'            [reduce using rule 37 (cmd)]
    $default       reduce using rule 37 (cmd)

    block     go to state 30
    cmd       go to state 124
    flow_cmd  go to state 33


State 99

   45 flow_cmd: KW_LOOP '(' TK_IDENTIFIER ':' . expr ',' expr ',' expr ')' cmd

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51

    expr      go to state 125
    foo_call  go to state 54


State 100

   47 expr: TK_IDENTIFIER '[' expr . ']'
   53     | expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . '^' expr
   64     | expr . '|' expr
   65     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    '|'           shift, and go to state 83
    '^'           shift, and go to state 84
    '~'           shift, and go to state 85
    '<'           shift, and go to state 86
    '>'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91
    ']'           shift, and go to state 126


State 101

   68 foo_call: TK_IDENTIFIER '(' ')' .

    $default  reduce using rule 68 (foo_call)


State 102

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . '^' expr
   64     | expr . '|' expr
   65     | expr . '~' expr
   70 foo_call_args: expr . foo_call_args_lst

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    '|'           shift, and go to state 83
    '^'           shift, and go to state 84
    '~'           shift, and go to state 85
    '<'           shift, and go to state 86
    '>'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91
    ','           shift, and go to state 127

    $default  reduce using rule 72 (foo_call_args_lst)

    foo_call_args_lst  go to state 128


State 103

   69 foo_call: TK_IDENTIFIER '(' foo_call_args . ')'

    ')'  shift, and go to state 129


State 104

   66 expr: '(' expr ')' .

    $default  reduce using rule 66 (expr)


State 105

   40 print_lst: ',' printable . print_lst

    ','  shift, and go to state 77

    $default  reduce using rule 41 (print_lst)

    print_lst  go to state 130


State 106

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   59     | expr OPERATOR_LE expr .
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . '^' expr
   64     | expr . '|' expr
   65     | expr . '~' expr

    '+'  shift, and go to state 88
    '-'  shift, and go to state 89
    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    $default  reduce using rule 59 (expr)


State 107

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   58     | expr OPERATOR_GE expr .
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . '^' expr
   64     | expr . '|' expr
   65     | expr . '~' expr

    '+'  shift, and go to state 88
    '-'  shift, and go to state 89
    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    $default  reduce using rule 58 (expr)


State 108

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   57     | expr OPERATOR_EQ expr .
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . '^' expr
   64     | expr . '|' expr
   65     | expr . '~' expr

    '+'  shift, and go to state 88
    '-'  shift, and go to state 89
    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    $default  reduce using rule 57 (expr)


State 109

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   60     | expr OPERATOR_DIF expr .
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . '^' expr
   64     | expr . '|' expr
   65     | expr . '~' expr

    '+'  shift, and go to state 88
    '-'  shift, and go to state 89
    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    $default  reduce using rule 60 (expr)


State 110

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . '^' expr
   64     | expr . '|' expr
   64     | expr '|' expr .
   65     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    '^'           shift, and go to state 84
    '~'           shift, and go to state 85
    '<'           shift, and go to state 86
    '>'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91

    $default  reduce using rule 64 (expr)


State 111

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . '^' expr
   63     | expr '^' expr .
   64     | expr . '|' expr
   65     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    '~'           shift, and go to state 85
    '<'           shift, and go to state 86
    '>'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91

    $default  reduce using rule 63 (expr)


State 112

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . '^' expr
   64     | expr . '|' expr
   65     | expr . '~' expr
   65     | expr '~' expr .

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    '<'           shift, and go to state 86
    '>'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91

    $default  reduce using rule 65 (expr)


State 113

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   62     | expr '<' expr .
   63     | expr . '^' expr
   64     | expr . '|' expr
   65     | expr . '~' expr

    '+'  shift, and go to state 88
    '-'  shift, and go to state 89
    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    $default  reduce using rule 62 (expr)


State 114

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   61     | expr '>' expr .
   62     | expr . '<' expr
   63     | expr . '^' expr
   64     | expr . '|' expr
   65     | expr . '~' expr

    '+'  shift, and go to state 88
    '-'  shift, and go to state 89
    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    $default  reduce using rule 61 (expr)


State 115

   53 expr: expr . '+' expr
   53     | expr '+' expr .
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . '^' expr
   64     | expr . '|' expr
   65     | expr . '~' expr

    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    $default  reduce using rule 53 (expr)


State 116

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   54     | expr '-' expr .
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . '^' expr
   64     | expr . '|' expr
   65     | expr . '~' expr

    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    $default  reduce using rule 54 (expr)


State 117

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   55     | expr '*' expr .
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . '^' expr
   64     | expr . '|' expr
   65     | expr . '~' expr

    $default  reduce using rule 55 (expr)


State 118

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   56     | expr '/' expr .
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . '^' expr
   64     | expr . '|' expr
   65     | expr . '~' expr

    $default  reduce using rule 56 (expr)


State 119

   31 cmd: TK_IDENTIFIER '[' expr ']' . '=' expr

    '='  shift, and go to state 131


State 120

   17 vec_def: ':' . init_lits vec_def_lst

    LIT_INTEGER  shift, and go to state 60
    LIT_FLOAT    shift, and go to state 61
    LIT_TRUE     shift, and go to state 62
    LIT_FALSE    shift, and go to state 63
    LIT_CHAR     shift, and go to state 64

    init_lits  go to state 132


State 121

    7 var_dec: TK_IDENTIFIER '=' var_type '[' LIT_INTEGER ']' vec_def .

    $default  reduce using rule 7 (var_dec)


State 122

   23 foo_header: TK_IDENTIFIER '(' foo_arg foo_header_lst ')' '=' var_type .

    $default  reduce using rule 23 (foo_header)


State 123

   42 flow_cmd: KW_IF '(' expr ')' KW_THEN . cmd
   43         | KW_IF '(' expr ')' KW_THEN . cmd KW_ELSE cmd

    KW_IF          shift, and go to state 23
    KW_WHILE       shift, and go to state 24
    KW_LOOP        shift, and go to state 25
    KW_READ        shift, and go to state 26
    KW_PRINT       shift, and go to state 27
    KW_RETURN      shift, and go to state 28
    TK_IDENTIFIER  shift, and go to state 29
    '{'            shift, and go to state 12

    KW_IF          [reduce using rule 37 (cmd)]
    KW_WHILE       [reduce using rule 37 (cmd)]
    KW_LOOP        [reduce using rule 37 (cmd)]
    KW_READ        [reduce using rule 37 (cmd)]
    KW_PRINT       [reduce using rule 37 (cmd)]
    KW_RETURN      [reduce using rule 37 (cmd)]
    TK_IDENTIFIER  [reduce using rule 37 (cmd)]
    '{'            [reduce using rule 37 (cmd)]
    $default       reduce using rule 37 (cmd)

    block     go to state 30
    cmd       go to state 133
    flow_cmd  go to state 33


State 124

   44 flow_cmd: KW_WHILE '(' expr ')' cmd .

    $default  reduce using rule 44 (flow_cmd)


State 125

   45 flow_cmd: KW_LOOP '(' TK_IDENTIFIER ':' expr . ',' expr ',' expr ')' cmd
   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . '^' expr
   64     | expr . '|' expr
   65     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    '|'           shift, and go to state 83
    '^'           shift, and go to state 84
    '~'           shift, and go to state 85
    '<'           shift, and go to state 86
    '>'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91
    ','           shift, and go to state 134


State 126

   47 expr: TK_IDENTIFIER '[' expr ']' .

    $default  reduce using rule 47 (expr)


State 127

   71 foo_call_args_lst: ',' . expr foo_call_args_lst

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51

    expr      go to state 135
    foo_call  go to state 54


State 128

   70 foo_call_args: expr foo_call_args_lst .

    $default  reduce using rule 70 (foo_call_args)


State 129

   69 foo_call: TK_IDENTIFIER '(' foo_call_args ')' .

    $default  reduce using rule 69 (foo_call)


State 130

   40 print_lst: ',' printable print_lst .

    $default  reduce using rule 40 (print_lst)


State 131

   31 cmd: TK_IDENTIFIER '[' expr ']' '=' . expr

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51

    expr      go to state 136
    foo_call  go to state 54


State 132

   17 vec_def: ':' init_lits . vec_def_lst

    LIT_INTEGER  shift, and go to state 60
    LIT_FLOAT    shift, and go to state 61
    LIT_TRUE     shift, and go to state 62
    LIT_FALSE    shift, and go to state 63
    LIT_CHAR     shift, and go to state 64

    $default  reduce using rule 20 (vec_def_lst)

    init_lits    go to state 137
    vec_def_lst  go to state 138


State 133

   42 flow_cmd: KW_IF '(' expr ')' KW_THEN cmd .
   43         | KW_IF '(' expr ')' KW_THEN cmd . KW_ELSE cmd

    KW_ELSE  shift, and go to state 139

    KW_ELSE   [reduce using rule 42 (flow_cmd)]
    $default  reduce using rule 42 (flow_cmd)


State 134

   45 flow_cmd: KW_LOOP '(' TK_IDENTIFIER ':' expr ',' . expr ',' expr ')' cmd

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51

    expr      go to state 140
    foo_call  go to state 54


State 135

   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . '^' expr
   64     | expr . '|' expr
   65     | expr . '~' expr
   71 foo_call_args_lst: ',' expr . foo_call_args_lst

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    '|'           shift, and go to state 83
    '^'           shift, and go to state 84
    '~'           shift, and go to state 85
    '<'           shift, and go to state 86
    '>'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91
    ','           shift, and go to state 127

    $default  reduce using rule 72 (foo_call_args_lst)

    foo_call_args_lst  go to state 141


State 136

   31 cmd: TK_IDENTIFIER '[' expr ']' '=' expr .
   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . '^' expr
   64     | expr . '|' expr
   65     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    '|'           shift, and go to state 83
    '^'           shift, and go to state 84
    '~'           shift, and go to state 85
    '<'           shift, and go to state 86
    '>'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91

    $default  reduce using rule 31 (cmd)


State 137

   19 vec_def_lst: init_lits . vec_def_lst

    LIT_INTEGER  shift, and go to state 60
    LIT_FLOAT    shift, and go to state 61
    LIT_TRUE     shift, and go to state 62
    LIT_FALSE    shift, and go to state 63
    LIT_CHAR     shift, and go to state 64

    $default  reduce using rule 20 (vec_def_lst)

    init_lits    go to state 137
    vec_def_lst  go to state 142


State 138

   17 vec_def: ':' init_lits vec_def_lst .

    $default  reduce using rule 17 (vec_def)


State 139

   43 flow_cmd: KW_IF '(' expr ')' KW_THEN cmd KW_ELSE . cmd

    KW_IF          shift, and go to state 23
    KW_WHILE       shift, and go to state 24
    KW_LOOP        shift, and go to state 25
    KW_READ        shift, and go to state 26
    KW_PRINT       shift, and go to state 27
    KW_RETURN      shift, and go to state 28
    TK_IDENTIFIER  shift, and go to state 29
    '{'            shift, and go to state 12

    KW_IF          [reduce using rule 37 (cmd)]
    KW_WHILE       [reduce using rule 37 (cmd)]
    KW_LOOP        [reduce using rule 37 (cmd)]
    KW_READ        [reduce using rule 37 (cmd)]
    KW_PRINT       [reduce using rule 37 (cmd)]
    KW_RETURN      [reduce using rule 37 (cmd)]
    TK_IDENTIFIER  [reduce using rule 37 (cmd)]
    '{'            [reduce using rule 37 (cmd)]
    $default       reduce using rule 37 (cmd)

    block     go to state 30
    cmd       go to state 143
    flow_cmd  go to state 33


State 140

   45 flow_cmd: KW_LOOP '(' TK_IDENTIFIER ':' expr ',' expr . ',' expr ')' cmd
   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . '^' expr
   64     | expr . '|' expr
   65     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    '|'           shift, and go to state 83
    '^'           shift, and go to state 84
    '~'           shift, and go to state 85
    '<'           shift, and go to state 86
    '>'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91
    ','           shift, and go to state 144


State 141

   71 foo_call_args_lst: ',' expr foo_call_args_lst .

    $default  reduce using rule 71 (foo_call_args_lst)


State 142

   19 vec_def_lst: init_lits vec_def_lst .

    $default  reduce using rule 19 (vec_def_lst)


State 143

   43 flow_cmd: KW_IF '(' expr ')' KW_THEN cmd KW_ELSE cmd .

    $default  reduce using rule 43 (flow_cmd)


State 144

   45 flow_cmd: KW_LOOP '(' TK_IDENTIFIER ':' expr ',' expr ',' . expr ')' cmd

    TK_IDENTIFIER  shift, and go to state 44
    LIT_INTEGER    shift, and go to state 45
    LIT_FLOAT      shift, and go to state 46
    LIT_TRUE       shift, and go to state 47
    LIT_FALSE      shift, and go to state 48
    LIT_CHAR       shift, and go to state 49
    '('            shift, and go to state 51

    expr      go to state 145
    foo_call  go to state 54


State 145

   45 flow_cmd: KW_LOOP '(' TK_IDENTIFIER ':' expr ',' expr ',' expr . ')' cmd
   53 expr: expr . '+' expr
   54     | expr . '-' expr
   55     | expr . '*' expr
   56     | expr . '/' expr
   57     | expr . OPERATOR_EQ expr
   58     | expr . OPERATOR_GE expr
   59     | expr . OPERATOR_LE expr
   60     | expr . OPERATOR_DIF expr
   61     | expr . '>' expr
   62     | expr . '<' expr
   63     | expr . '^' expr
   64     | expr . '|' expr
   65     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 79
    OPERATOR_GE   shift, and go to state 80
    OPERATOR_EQ   shift, and go to state 81
    OPERATOR_DIF  shift, and go to state 82
    '|'           shift, and go to state 83
    '^'           shift, and go to state 84
    '~'           shift, and go to state 85
    '<'           shift, and go to state 86
    '>'           shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91
    ')'           shift, and go to state 146


State 146

   45 flow_cmd: KW_LOOP '(' TK_IDENTIFIER ':' expr ',' expr ',' expr ')' . cmd

    KW_IF          shift, and go to state 23
    KW_WHILE       shift, and go to state 24
    KW_LOOP        shift, and go to state 25
    KW_READ        shift, and go to state 26
    KW_PRINT       shift, and go to state 27
    KW_RETURN      shift, and go to state 28
    TK_IDENTIFIER  shift, and go to state 29
    '{'            shift, and go to state 12

    KW_IF          [reduce using rule 37 (cmd)]
    KW_WHILE       [reduce using rule 37 (cmd)]
    KW_LOOP        [reduce using rule 37 (cmd)]
    KW_READ        [reduce using rule 37 (cmd)]
    KW_PRINT       [reduce using rule 37 (cmd)]
    KW_RETURN      [reduce using rule 37 (cmd)]
    TK_IDENTIFIER  [reduce using rule 37 (cmd)]
    '{'            [reduce using rule 37 (cmd)]
    $default       reduce using rule 37 (cmd)

    block     go to state 30
    cmd       go to state 147
    flow_cmd  go to state 33


State 147

   45 flow_cmd: KW_LOOP '(' TK_IDENTIFIER ':' expr ',' expr ',' expr ')' cmd .

    $default  reduce using rule 45 (flow_cmd)
