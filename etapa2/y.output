Terminals unused in grammar

    TOKEN_ERROR


State 12 conflicts: 8 shift/reduce, 1 reduce/reduce
State 33 conflicts: 8 shift/reduce, 1 reduce/reduce
State 99 conflicts: 8 shift/reduce
State 124 conflicts: 8 shift/reduce
State 134 conflicts: 1 shift/reduce
State 140 conflicts: 8 shift/reduce
State 147 conflicts: 8 shift/reduce


Grammar

    0 $accept: programa $end

    1 programa: dec_lst

    2 dec_lst: dec ';' dec_lst
    3        | %empty

    4 dec: var_dec
    5    | foo_dec

    6 var_dec: TK_IDENTIFIER '=' var_type ':' init_lits
    7        | TK_IDENTIFIER '=' var_type '[' LIT_INTEGER ']' vec_def

    8 var_type: KW_BOOL
    9         | KW_INT
   10         | KW_FLOAT
   11         | KW_CHAR

   12 init_lits: LIT_CHAR
   13          | LIT_FALSE
   14          | LIT_TRUE
   15          | LIT_FLOAT
   16          | LIT_INTEGER

   17 vec_def: ':' init_lits vec_def_lst
   18        | %empty

   19 vec_def_lst: init_lits vec_def_lst
   20            | %empty

   21 foo_dec: foo_header foo_body

   22 foo_header: TK_IDENTIFIER '(' ')' '=' var_type
   23           | TK_IDENTIFIER '(' foo_arg foo_header_lst ')' '=' var_type

   24 foo_header_lst: ',' foo_arg foo_header_lst
   25               | %empty

   26 foo_arg: TK_IDENTIFIER '=' var_type

   27 foo_body: block

   28 block: '{' cmd_lst '}'

   29 cmd_lst: cmd cmd_lst
   30        | %empty

   31 cmd: TK_IDENTIFIER '=' expr
   32    | TK_IDENTIFIER '[' expr ']' '=' expr
   33    | KW_READ TK_IDENTIFIER
   34    | KW_PRINT printable print_lst
   35    | KW_RETURN expr
   36    | flow_cmd
   37    | block
   38    | %empty

   39 printable: LIT_STRING
   40          | expr

   41 print_lst: ',' printable print_lst
   42          | %empty

   43 flow_cmd: KW_IF '(' expr ')' KW_THEN cmd
   44         | KW_IF '(' expr ')' KW_THEN cmd KW_ELSE cmd
   45         | KW_WHILE '(' expr ')' cmd
   46         | KW_LOOP '(' TK_IDENTIFIER ':' expr ',' expr ',' expr ')' cmd

   47 expr: TK_IDENTIFIER
   48     | TK_IDENTIFIER '[' expr ']'
   49     | LIT_INTEGER
   50     | LIT_FLOAT
   51     | LIT_FALSE
   52     | LIT_TRUE
   53     | LIT_CHAR
   54     | expr '+' expr
   55     | expr '-' expr
   56     | expr '*' expr
   57     | expr '/' expr
   58     | expr OPERATOR_EQ expr
   59     | expr OPERATOR_GE expr
   60     | expr OPERATOR_LE expr
   61     | expr OPERATOR_DIF expr
   62     | expr '>' expr
   63     | expr '<' expr
   64     | expr '^' expr
   65     | expr '|' expr
   66     | expr '~' expr
   67     | '(' expr ')'
   68     | foo_call

   69 foo_call: TK_IDENTIFIER '(' ')'
   70         | TK_IDENTIFIER '(' foo_call_args ')'

   71 foo_call_args: expr foo_call_args_lst

   72 foo_call_args_lst: ',' expr foo_call_args_lst
   73                  | %empty


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 22 23 43 44 45 46 67 69 70
    ')' (41) 22 23 43 44 45 46 67 69 70
    '*' (42) 56
    '+' (43) 54
    ',' (44) 24 41 46 72
    '-' (45) 55
    '/' (47) 57
    ':' (58) 6 17 46
    ';' (59) 2
    '<' (60) 63
    '=' (61) 6 7 22 23 26 31 32
    '>' (62) 62
    '[' (91) 7 32 48
    ']' (93) 7 32 48
    '^' (94) 64
    '{' (123) 28
    '|' (124) 65
    '}' (125) 28
    '~' (126) 66
    error (256)
    KW_CHAR (258) 11
    KW_INT (259) 9
    KW_FLOAT (260) 10
    KW_BOOL (261) 8
    KW_IF (262) 43 44
    KW_THEN (263) 43 44
    KW_ELSE (264) 44
    KW_WHILE (265) 45
    KW_LOOP (266) 46
    KW_READ (267) 33
    KW_PRINT (268) 34
    KW_RETURN (269) 35
    OPERATOR_LE (270) 60
    OPERATOR_GE (271) 59
    OPERATOR_EQ (272) 58
    OPERATOR_DIF (273) 61
    TK_IDENTIFIER (274) 6 7 22 23 26 31 32 33 46 47 48 69 70
    LIT_INTEGER (275) 7 16 49
    LIT_FLOAT (276) 15 50
    LIT_TRUE (277) 14 52
    LIT_FALSE (278) 13 51
    LIT_CHAR (279) 12 53
    LIT_STRING (280) 39
    TOKEN_ERROR (281)


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    programa (47)
        on left: 1
        on right: 0
    dec_lst (48)
        on left: 2 3
        on right: 1 2
    dec (49)
        on left: 4 5
        on right: 2
    var_dec (50)
        on left: 6 7
        on right: 4
    var_type (51)
        on left: 8 9 10 11
        on right: 6 7 22 23 26
    init_lits (52)
        on left: 12 13 14 15 16
        on right: 6 17 19
    vec_def (53)
        on left: 17 18
        on right: 7
    vec_def_lst (54)
        on left: 19 20
        on right: 17 19
    foo_dec (55)
        on left: 21
        on right: 5
    foo_header (56)
        on left: 22 23
        on right: 21
    foo_header_lst (57)
        on left: 24 25
        on right: 23 24
    foo_arg (58)
        on left: 26
        on right: 23 24
    foo_body (59)
        on left: 27
        on right: 21
    block (60)
        on left: 28
        on right: 27 37
    cmd_lst (61)
        on left: 29 30
        on right: 28 29
    cmd (62)
        on left: 31 32 33 34 35 36 37 38
        on right: 29 43 44 45 46
    printable (63)
        on left: 39 40
        on right: 34 41
    print_lst (64)
        on left: 41 42
        on right: 34 41
    flow_cmd (65)
        on left: 43 44 45 46
        on right: 36
    expr (66)
        on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
        on right: 31 32 35 40 43 44 45 46 48 54 55 56 57 58 59 60 61 62 63 64 65 66 67 71 72
    foo_call (67)
        on left: 69 70
        on right: 68
    foo_call_args (68)
        on left: 71
        on right: 70
    foo_call_args_lst (69)
        on left: 72 73
        on right: 71 72


State 0

    0 $accept: . programa $end

    TK_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 3 (dec_lst)

    programa    go to state 2
    dec_lst     go to state 3
    dec         go to state 4
    var_dec     go to state 5
    foo_dec     go to state 6
    foo_header  go to state 7


State 1

    6 var_dec: TK_IDENTIFIER . '=' var_type ':' init_lits
    7        | TK_IDENTIFIER . '=' var_type '[' LIT_INTEGER ']' vec_def
   22 foo_header: TK_IDENTIFIER . '(' ')' '=' var_type
   23           | TK_IDENTIFIER . '(' foo_arg foo_header_lst ')' '=' var_type

    '='  shift, and go to state 8
    '('  shift, and go to state 9


State 2

    0 $accept: programa . $end

    $end  shift, and go to state 10


State 3

    1 programa: dec_lst .

    $default  reduce using rule 1 (programa)


State 4

    2 dec_lst: dec . ';' dec_lst

    ';'  shift, and go to state 11


State 5

    4 dec: var_dec .

    $default  reduce using rule 4 (dec)


State 6

    5 dec: foo_dec .

    $default  reduce using rule 5 (dec)


State 7

   21 foo_dec: foo_header . foo_body

    '{'  shift, and go to state 12

    foo_body  go to state 13
    block     go to state 14


State 8

    6 var_dec: TK_IDENTIFIER '=' . var_type ':' init_lits
    7        | TK_IDENTIFIER '=' . var_type '[' LIT_INTEGER ']' vec_def

    KW_CHAR   shift, and go to state 15
    KW_INT    shift, and go to state 16
    KW_FLOAT  shift, and go to state 17
    KW_BOOL   shift, and go to state 18

    var_type  go to state 19


State 9

   22 foo_header: TK_IDENTIFIER '(' . ')' '=' var_type
   23           | TK_IDENTIFIER '(' . foo_arg foo_header_lst ')' '=' var_type

    TK_IDENTIFIER  shift, and go to state 20
    ')'            shift, and go to state 21

    foo_arg  go to state 22


State 10

    0 $accept: programa $end .

    $default  accept


State 11

    2 dec_lst: dec ';' . dec_lst

    TK_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 3 (dec_lst)

    dec_lst     go to state 23
    dec         go to state 4
    var_dec     go to state 5
    foo_dec     go to state 6
    foo_header  go to state 7


State 12

   28 block: '{' . cmd_lst '}'

    KW_IF          shift, and go to state 24
    KW_WHILE       shift, and go to state 25
    KW_LOOP        shift, and go to state 26
    KW_READ        shift, and go to state 27
    KW_PRINT       shift, and go to state 28
    KW_RETURN      shift, and go to state 29
    TK_IDENTIFIER  shift, and go to state 30
    '{'            shift, and go to state 12

    KW_IF          [reduce using rule 38 (cmd)]
    KW_WHILE       [reduce using rule 38 (cmd)]
    KW_LOOP        [reduce using rule 38 (cmd)]
    KW_READ        [reduce using rule 38 (cmd)]
    KW_PRINT       [reduce using rule 38 (cmd)]
    KW_RETURN      [reduce using rule 38 (cmd)]
    TK_IDENTIFIER  [reduce using rule 38 (cmd)]
    '{'            [reduce using rule 38 (cmd)]
    '}'            reduce using rule 30 (cmd_lst)
    '}'            [reduce using rule 38 (cmd)]
    $default       reduce using rule 30 (cmd_lst)

    block     go to state 31
    cmd_lst   go to state 32
    cmd       go to state 33
    flow_cmd  go to state 34


State 13

   21 foo_dec: foo_header foo_body .

    $default  reduce using rule 21 (foo_dec)


State 14

   27 foo_body: block .

    $default  reduce using rule 27 (foo_body)


State 15

   11 var_type: KW_CHAR .

    $default  reduce using rule 11 (var_type)


State 16

    9 var_type: KW_INT .

    $default  reduce using rule 9 (var_type)


State 17

   10 var_type: KW_FLOAT .

    $default  reduce using rule 10 (var_type)


State 18

    8 var_type: KW_BOOL .

    $default  reduce using rule 8 (var_type)


State 19

    6 var_dec: TK_IDENTIFIER '=' var_type . ':' init_lits
    7        | TK_IDENTIFIER '=' var_type . '[' LIT_INTEGER ']' vec_def

    ':'  shift, and go to state 35
    '['  shift, and go to state 36


State 20

   26 foo_arg: TK_IDENTIFIER . '=' var_type

    '='  shift, and go to state 37


State 21

   22 foo_header: TK_IDENTIFIER '(' ')' . '=' var_type

    '='  shift, and go to state 38


State 22

   23 foo_header: TK_IDENTIFIER '(' foo_arg . foo_header_lst ')' '=' var_type

    ','  shift, and go to state 39

    $default  reduce using rule 25 (foo_header_lst)

    foo_header_lst  go to state 40


State 23

    2 dec_lst: dec ';' dec_lst .

    $default  reduce using rule 2 (dec_lst)


State 24

   43 flow_cmd: KW_IF . '(' expr ')' KW_THEN cmd
   44         | KW_IF . '(' expr ')' KW_THEN cmd KW_ELSE cmd

    '('  shift, and go to state 41


State 25

   45 flow_cmd: KW_WHILE . '(' expr ')' cmd

    '('  shift, and go to state 42


State 26

   46 flow_cmd: KW_LOOP . '(' TK_IDENTIFIER ':' expr ',' expr ',' expr ')' cmd

    '('  shift, and go to state 43


State 27

   33 cmd: KW_READ . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 44


State 28

   34 cmd: KW_PRINT . printable print_lst

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    LIT_STRING     shift, and go to state 51
    '('            shift, and go to state 52

    printable  go to state 53
    expr       go to state 54
    foo_call   go to state 55


State 29

   35 cmd: KW_RETURN . expr

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52

    expr      go to state 56
    foo_call  go to state 55


State 30

   31 cmd: TK_IDENTIFIER . '=' expr
   32    | TK_IDENTIFIER . '[' expr ']' '=' expr

    '='  shift, and go to state 57
    '['  shift, and go to state 58


State 31

   37 cmd: block .

    $default  reduce using rule 37 (cmd)


State 32

   28 block: '{' cmd_lst . '}'

    '}'  shift, and go to state 59


State 33

   29 cmd_lst: cmd . cmd_lst

    KW_IF          shift, and go to state 24
    KW_WHILE       shift, and go to state 25
    KW_LOOP        shift, and go to state 26
    KW_READ        shift, and go to state 27
    KW_PRINT       shift, and go to state 28
    KW_RETURN      shift, and go to state 29
    TK_IDENTIFIER  shift, and go to state 30
    '{'            shift, and go to state 12

    KW_IF          [reduce using rule 38 (cmd)]
    KW_WHILE       [reduce using rule 38 (cmd)]
    KW_LOOP        [reduce using rule 38 (cmd)]
    KW_READ        [reduce using rule 38 (cmd)]
    KW_PRINT       [reduce using rule 38 (cmd)]
    KW_RETURN      [reduce using rule 38 (cmd)]
    TK_IDENTIFIER  [reduce using rule 38 (cmd)]
    '{'            [reduce using rule 38 (cmd)]
    '}'            reduce using rule 30 (cmd_lst)
    '}'            [reduce using rule 38 (cmd)]
    $default       reduce using rule 30 (cmd_lst)

    block     go to state 31
    cmd_lst   go to state 60
    cmd       go to state 33
    flow_cmd  go to state 34


State 34

   36 cmd: flow_cmd .

    $default  reduce using rule 36 (cmd)


State 35

    6 var_dec: TK_IDENTIFIER '=' var_type ':' . init_lits

    LIT_INTEGER  shift, and go to state 61
    LIT_FLOAT    shift, and go to state 62
    LIT_TRUE     shift, and go to state 63
    LIT_FALSE    shift, and go to state 64
    LIT_CHAR     shift, and go to state 65

    init_lits  go to state 66


State 36

    7 var_dec: TK_IDENTIFIER '=' var_type '[' . LIT_INTEGER ']' vec_def

    LIT_INTEGER  shift, and go to state 67


State 37

   26 foo_arg: TK_IDENTIFIER '=' . var_type

    KW_CHAR   shift, and go to state 15
    KW_INT    shift, and go to state 16
    KW_FLOAT  shift, and go to state 17
    KW_BOOL   shift, and go to state 18

    var_type  go to state 68


State 38

   22 foo_header: TK_IDENTIFIER '(' ')' '=' . var_type

    KW_CHAR   shift, and go to state 15
    KW_INT    shift, and go to state 16
    KW_FLOAT  shift, and go to state 17
    KW_BOOL   shift, and go to state 18

    var_type  go to state 69


State 39

   24 foo_header_lst: ',' . foo_arg foo_header_lst

    TK_IDENTIFIER  shift, and go to state 20

    foo_arg  go to state 70


State 40

   23 foo_header: TK_IDENTIFIER '(' foo_arg foo_header_lst . ')' '=' var_type

    ')'  shift, and go to state 71


State 41

   43 flow_cmd: KW_IF '(' . expr ')' KW_THEN cmd
   44         | KW_IF '(' . expr ')' KW_THEN cmd KW_ELSE cmd

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52

    expr      go to state 72
    foo_call  go to state 55


State 42

   45 flow_cmd: KW_WHILE '(' . expr ')' cmd

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52

    expr      go to state 73
    foo_call  go to state 55


State 43

   46 flow_cmd: KW_LOOP '(' . TK_IDENTIFIER ':' expr ',' expr ',' expr ')' cmd

    TK_IDENTIFIER  shift, and go to state 74


State 44

   33 cmd: KW_READ TK_IDENTIFIER .

    $default  reduce using rule 33 (cmd)


State 45

   47 expr: TK_IDENTIFIER .
   48     | TK_IDENTIFIER . '[' expr ']'
   69 foo_call: TK_IDENTIFIER . '(' ')'
   70         | TK_IDENTIFIER . '(' foo_call_args ')'

    '['  shift, and go to state 75
    '('  shift, and go to state 76

    $default  reduce using rule 47 (expr)


State 46

   49 expr: LIT_INTEGER .

    $default  reduce using rule 49 (expr)


State 47

   50 expr: LIT_FLOAT .

    $default  reduce using rule 50 (expr)


State 48

   52 expr: LIT_TRUE .

    $default  reduce using rule 52 (expr)


State 49

   51 expr: LIT_FALSE .

    $default  reduce using rule 51 (expr)


State 50

   53 expr: LIT_CHAR .

    $default  reduce using rule 53 (expr)


State 51

   39 printable: LIT_STRING .

    $default  reduce using rule 39 (printable)


State 52

   67 expr: '(' . expr ')'

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52

    expr      go to state 77
    foo_call  go to state 55


State 53

   34 cmd: KW_PRINT printable . print_lst

    ','  shift, and go to state 78

    $default  reduce using rule 42 (print_lst)

    print_lst  go to state 79


State 54

   40 printable: expr .
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   63     | expr . '<' expr
   64     | expr . '^' expr
   65     | expr . '|' expr
   66     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 80
    OPERATOR_GE   shift, and go to state 81
    OPERATOR_EQ   shift, and go to state 82
    OPERATOR_DIF  shift, and go to state 83
    '|'           shift, and go to state 84
    '^'           shift, and go to state 85
    '~'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92

    $default  reduce using rule 40 (printable)


State 55

   68 expr: foo_call .

    $default  reduce using rule 68 (expr)


State 56

   35 cmd: KW_RETURN expr .
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   63     | expr . '<' expr
   64     | expr . '^' expr
   65     | expr . '|' expr
   66     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 80
    OPERATOR_GE   shift, and go to state 81
    OPERATOR_EQ   shift, and go to state 82
    OPERATOR_DIF  shift, and go to state 83
    '|'           shift, and go to state 84
    '^'           shift, and go to state 85
    '~'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92

    $default  reduce using rule 35 (cmd)


State 57

   31 cmd: TK_IDENTIFIER '=' . expr

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52

    expr      go to state 93
    foo_call  go to state 55


State 58

   32 cmd: TK_IDENTIFIER '[' . expr ']' '=' expr

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52

    expr      go to state 94
    foo_call  go to state 55


State 59

   28 block: '{' cmd_lst '}' .

    $default  reduce using rule 28 (block)


State 60

   29 cmd_lst: cmd cmd_lst .

    $default  reduce using rule 29 (cmd_lst)


State 61

   16 init_lits: LIT_INTEGER .

    $default  reduce using rule 16 (init_lits)


State 62

   15 init_lits: LIT_FLOAT .

    $default  reduce using rule 15 (init_lits)


State 63

   14 init_lits: LIT_TRUE .

    $default  reduce using rule 14 (init_lits)


State 64

   13 init_lits: LIT_FALSE .

    $default  reduce using rule 13 (init_lits)


State 65

   12 init_lits: LIT_CHAR .

    $default  reduce using rule 12 (init_lits)


State 66

    6 var_dec: TK_IDENTIFIER '=' var_type ':' init_lits .

    $default  reduce using rule 6 (var_dec)


State 67

    7 var_dec: TK_IDENTIFIER '=' var_type '[' LIT_INTEGER . ']' vec_def

    ']'  shift, and go to state 95


State 68

   26 foo_arg: TK_IDENTIFIER '=' var_type .

    $default  reduce using rule 26 (foo_arg)


State 69

   22 foo_header: TK_IDENTIFIER '(' ')' '=' var_type .

    $default  reduce using rule 22 (foo_header)


State 70

   24 foo_header_lst: ',' foo_arg . foo_header_lst

    ','  shift, and go to state 39

    $default  reduce using rule 25 (foo_header_lst)

    foo_header_lst  go to state 96


State 71

   23 foo_header: TK_IDENTIFIER '(' foo_arg foo_header_lst ')' . '=' var_type

    '='  shift, and go to state 97


State 72

   43 flow_cmd: KW_IF '(' expr . ')' KW_THEN cmd
   44         | KW_IF '(' expr . ')' KW_THEN cmd KW_ELSE cmd
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   63     | expr . '<' expr
   64     | expr . '^' expr
   65     | expr . '|' expr
   66     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 80
    OPERATOR_GE   shift, and go to state 81
    OPERATOR_EQ   shift, and go to state 82
    OPERATOR_DIF  shift, and go to state 83
    '|'           shift, and go to state 84
    '^'           shift, and go to state 85
    '~'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92
    ')'           shift, and go to state 98


State 73

   45 flow_cmd: KW_WHILE '(' expr . ')' cmd
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   63     | expr . '<' expr
   64     | expr . '^' expr
   65     | expr . '|' expr
   66     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 80
    OPERATOR_GE   shift, and go to state 81
    OPERATOR_EQ   shift, and go to state 82
    OPERATOR_DIF  shift, and go to state 83
    '|'           shift, and go to state 84
    '^'           shift, and go to state 85
    '~'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92
    ')'           shift, and go to state 99


State 74

   46 flow_cmd: KW_LOOP '(' TK_IDENTIFIER . ':' expr ',' expr ',' expr ')' cmd

    ':'  shift, and go to state 100


State 75

   48 expr: TK_IDENTIFIER '[' . expr ']'

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52

    expr      go to state 101
    foo_call  go to state 55


State 76

   69 foo_call: TK_IDENTIFIER '(' . ')'
   70         | TK_IDENTIFIER '(' . foo_call_args ')'

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52
    ')'            shift, and go to state 102

    expr           go to state 103
    foo_call       go to state 55
    foo_call_args  go to state 104


State 77

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   63     | expr . '<' expr
   64     | expr . '^' expr
   65     | expr . '|' expr
   66     | expr . '~' expr
   67     | '(' expr . ')'

    OPERATOR_LE   shift, and go to state 80
    OPERATOR_GE   shift, and go to state 81
    OPERATOR_EQ   shift, and go to state 82
    OPERATOR_DIF  shift, and go to state 83
    '|'           shift, and go to state 84
    '^'           shift, and go to state 85
    '~'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92
    ')'           shift, and go to state 105


State 78

   41 print_lst: ',' . printable print_lst

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    LIT_STRING     shift, and go to state 51
    '('            shift, and go to state 52

    printable  go to state 106
    expr       go to state 54
    foo_call   go to state 55


State 79

   34 cmd: KW_PRINT printable print_lst .

    $default  reduce using rule 34 (cmd)


State 80

   60 expr: expr OPERATOR_LE . expr

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52

    expr      go to state 107
    foo_call  go to state 55


State 81

   59 expr: expr OPERATOR_GE . expr

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52

    expr      go to state 108
    foo_call  go to state 55


State 82

   58 expr: expr OPERATOR_EQ . expr

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52

    expr      go to state 109
    foo_call  go to state 55


State 83

   61 expr: expr OPERATOR_DIF . expr

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52

    expr      go to state 110
    foo_call  go to state 55


State 84

   65 expr: expr '|' . expr

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52

    expr      go to state 111
    foo_call  go to state 55


State 85

   64 expr: expr '^' . expr

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52

    expr      go to state 112
    foo_call  go to state 55


State 86

   66 expr: expr '~' . expr

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52

    expr      go to state 113
    foo_call  go to state 55


State 87

   63 expr: expr '<' . expr

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52

    expr      go to state 114
    foo_call  go to state 55


State 88

   62 expr: expr '>' . expr

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52

    expr      go to state 115
    foo_call  go to state 55


State 89

   54 expr: expr '+' . expr

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52

    expr      go to state 116
    foo_call  go to state 55


State 90

   55 expr: expr '-' . expr

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52

    expr      go to state 117
    foo_call  go to state 55


State 91

   56 expr: expr '*' . expr

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52

    expr      go to state 118
    foo_call  go to state 55


State 92

   57 expr: expr '/' . expr

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52

    expr      go to state 119
    foo_call  go to state 55


State 93

   31 cmd: TK_IDENTIFIER '=' expr .
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   63     | expr . '<' expr
   64     | expr . '^' expr
   65     | expr . '|' expr
   66     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 80
    OPERATOR_GE   shift, and go to state 81
    OPERATOR_EQ   shift, and go to state 82
    OPERATOR_DIF  shift, and go to state 83
    '|'           shift, and go to state 84
    '^'           shift, and go to state 85
    '~'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92

    $default  reduce using rule 31 (cmd)


State 94

   32 cmd: TK_IDENTIFIER '[' expr . ']' '=' expr
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   63     | expr . '<' expr
   64     | expr . '^' expr
   65     | expr . '|' expr
   66     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 80
    OPERATOR_GE   shift, and go to state 81
    OPERATOR_EQ   shift, and go to state 82
    OPERATOR_DIF  shift, and go to state 83
    '|'           shift, and go to state 84
    '^'           shift, and go to state 85
    '~'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92
    ']'           shift, and go to state 120


State 95

    7 var_dec: TK_IDENTIFIER '=' var_type '[' LIT_INTEGER ']' . vec_def

    ':'  shift, and go to state 121

    $default  reduce using rule 18 (vec_def)

    vec_def  go to state 122


State 96

   24 foo_header_lst: ',' foo_arg foo_header_lst .

    $default  reduce using rule 24 (foo_header_lst)


State 97

   23 foo_header: TK_IDENTIFIER '(' foo_arg foo_header_lst ')' '=' . var_type

    KW_CHAR   shift, and go to state 15
    KW_INT    shift, and go to state 16
    KW_FLOAT  shift, and go to state 17
    KW_BOOL   shift, and go to state 18

    var_type  go to state 123


State 98

   43 flow_cmd: KW_IF '(' expr ')' . KW_THEN cmd
   44         | KW_IF '(' expr ')' . KW_THEN cmd KW_ELSE cmd

    KW_THEN  shift, and go to state 124


State 99

   45 flow_cmd: KW_WHILE '(' expr ')' . cmd

    KW_IF          shift, and go to state 24
    KW_WHILE       shift, and go to state 25
    KW_LOOP        shift, and go to state 26
    KW_READ        shift, and go to state 27
    KW_PRINT       shift, and go to state 28
    KW_RETURN      shift, and go to state 29
    TK_IDENTIFIER  shift, and go to state 30
    '{'            shift, and go to state 12

    KW_IF          [reduce using rule 38 (cmd)]
    KW_WHILE       [reduce using rule 38 (cmd)]
    KW_LOOP        [reduce using rule 38 (cmd)]
    KW_READ        [reduce using rule 38 (cmd)]
    KW_PRINT       [reduce using rule 38 (cmd)]
    KW_RETURN      [reduce using rule 38 (cmd)]
    TK_IDENTIFIER  [reduce using rule 38 (cmd)]
    '{'            [reduce using rule 38 (cmd)]
    $default       reduce using rule 38 (cmd)

    block     go to state 31
    cmd       go to state 125
    flow_cmd  go to state 34


State 100

   46 flow_cmd: KW_LOOP '(' TK_IDENTIFIER ':' . expr ',' expr ',' expr ')' cmd

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52

    expr      go to state 126
    foo_call  go to state 55


State 101

   48 expr: TK_IDENTIFIER '[' expr . ']'
   54     | expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   63     | expr . '<' expr
   64     | expr . '^' expr
   65     | expr . '|' expr
   66     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 80
    OPERATOR_GE   shift, and go to state 81
    OPERATOR_EQ   shift, and go to state 82
    OPERATOR_DIF  shift, and go to state 83
    '|'           shift, and go to state 84
    '^'           shift, and go to state 85
    '~'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92
    ']'           shift, and go to state 127


State 102

   69 foo_call: TK_IDENTIFIER '(' ')' .

    $default  reduce using rule 69 (foo_call)


State 103

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   63     | expr . '<' expr
   64     | expr . '^' expr
   65     | expr . '|' expr
   66     | expr . '~' expr
   71 foo_call_args: expr . foo_call_args_lst

    OPERATOR_LE   shift, and go to state 80
    OPERATOR_GE   shift, and go to state 81
    OPERATOR_EQ   shift, and go to state 82
    OPERATOR_DIF  shift, and go to state 83
    '|'           shift, and go to state 84
    '^'           shift, and go to state 85
    '~'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92
    ','           shift, and go to state 128

    $default  reduce using rule 73 (foo_call_args_lst)

    foo_call_args_lst  go to state 129


State 104

   70 foo_call: TK_IDENTIFIER '(' foo_call_args . ')'

    ')'  shift, and go to state 130


State 105

   67 expr: '(' expr ')' .

    $default  reduce using rule 67 (expr)


State 106

   41 print_lst: ',' printable . print_lst

    ','  shift, and go to state 78

    $default  reduce using rule 42 (print_lst)

    print_lst  go to state 131


State 107

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   60     | expr OPERATOR_LE expr .
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   63     | expr . '<' expr
   64     | expr . '^' expr
   65     | expr . '|' expr
   66     | expr . '~' expr

    '+'  shift, and go to state 89
    '-'  shift, and go to state 90
    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 60 (expr)


State 108

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   59     | expr OPERATOR_GE expr .
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   63     | expr . '<' expr
   64     | expr . '^' expr
   65     | expr . '|' expr
   66     | expr . '~' expr

    '+'  shift, and go to state 89
    '-'  shift, and go to state 90
    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 59 (expr)


State 109

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   58     | expr OPERATOR_EQ expr .
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   63     | expr . '<' expr
   64     | expr . '^' expr
   65     | expr . '|' expr
   66     | expr . '~' expr

    '+'  shift, and go to state 89
    '-'  shift, and go to state 90
    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 58 (expr)


State 110

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   61     | expr OPERATOR_DIF expr .
   62     | expr . '>' expr
   63     | expr . '<' expr
   64     | expr . '^' expr
   65     | expr . '|' expr
   66     | expr . '~' expr

    '+'  shift, and go to state 89
    '-'  shift, and go to state 90
    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 61 (expr)


State 111

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   63     | expr . '<' expr
   64     | expr . '^' expr
   65     | expr . '|' expr
   65     | expr '|' expr .
   66     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 80
    OPERATOR_GE   shift, and go to state 81
    OPERATOR_EQ   shift, and go to state 82
    OPERATOR_DIF  shift, and go to state 83
    '^'           shift, and go to state 85
    '~'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92

    $default  reduce using rule 65 (expr)


State 112

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   63     | expr . '<' expr
   64     | expr . '^' expr
   64     | expr '^' expr .
   65     | expr . '|' expr
   66     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 80
    OPERATOR_GE   shift, and go to state 81
    OPERATOR_EQ   shift, and go to state 82
    OPERATOR_DIF  shift, and go to state 83
    '~'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92

    $default  reduce using rule 64 (expr)


State 113

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   63     | expr . '<' expr
   64     | expr . '^' expr
   65     | expr . '|' expr
   66     | expr . '~' expr
   66     | expr '~' expr .

    OPERATOR_LE   shift, and go to state 80
    OPERATOR_GE   shift, and go to state 81
    OPERATOR_EQ   shift, and go to state 82
    OPERATOR_DIF  shift, and go to state 83
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92

    $default  reduce using rule 66 (expr)


State 114

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   63     | expr . '<' expr
   63     | expr '<' expr .
   64     | expr . '^' expr
   65     | expr . '|' expr
   66     | expr . '~' expr

    '+'  shift, and go to state 89
    '-'  shift, and go to state 90
    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 63 (expr)


State 115

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   62     | expr '>' expr .
   63     | expr . '<' expr
   64     | expr . '^' expr
   65     | expr . '|' expr
   66     | expr . '~' expr

    '+'  shift, and go to state 89
    '-'  shift, and go to state 90
    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 62 (expr)


State 116

   54 expr: expr . '+' expr
   54     | expr '+' expr .
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   63     | expr . '<' expr
   64     | expr . '^' expr
   65     | expr . '|' expr
   66     | expr . '~' expr

    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 54 (expr)


State 117

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   55     | expr '-' expr .
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   63     | expr . '<' expr
   64     | expr . '^' expr
   65     | expr . '|' expr
   66     | expr . '~' expr

    '*'  shift, and go to state 91
    '/'  shift, and go to state 92

    $default  reduce using rule 55 (expr)


State 118

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   56     | expr '*' expr .
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   63     | expr . '<' expr
   64     | expr . '^' expr
   65     | expr . '|' expr
   66     | expr . '~' expr

    $default  reduce using rule 56 (expr)


State 119

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   57     | expr '/' expr .
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   63     | expr . '<' expr
   64     | expr . '^' expr
   65     | expr . '|' expr
   66     | expr . '~' expr

    $default  reduce using rule 57 (expr)


State 120

   32 cmd: TK_IDENTIFIER '[' expr ']' . '=' expr

    '='  shift, and go to state 132


State 121

   17 vec_def: ':' . init_lits vec_def_lst

    LIT_INTEGER  shift, and go to state 61
    LIT_FLOAT    shift, and go to state 62
    LIT_TRUE     shift, and go to state 63
    LIT_FALSE    shift, and go to state 64
    LIT_CHAR     shift, and go to state 65

    init_lits  go to state 133


State 122

    7 var_dec: TK_IDENTIFIER '=' var_type '[' LIT_INTEGER ']' vec_def .

    $default  reduce using rule 7 (var_dec)


State 123

   23 foo_header: TK_IDENTIFIER '(' foo_arg foo_header_lst ')' '=' var_type .

    $default  reduce using rule 23 (foo_header)


State 124

   43 flow_cmd: KW_IF '(' expr ')' KW_THEN . cmd
   44         | KW_IF '(' expr ')' KW_THEN . cmd KW_ELSE cmd

    KW_IF          shift, and go to state 24
    KW_WHILE       shift, and go to state 25
    KW_LOOP        shift, and go to state 26
    KW_READ        shift, and go to state 27
    KW_PRINT       shift, and go to state 28
    KW_RETURN      shift, and go to state 29
    TK_IDENTIFIER  shift, and go to state 30
    '{'            shift, and go to state 12

    KW_IF          [reduce using rule 38 (cmd)]
    KW_WHILE       [reduce using rule 38 (cmd)]
    KW_LOOP        [reduce using rule 38 (cmd)]
    KW_READ        [reduce using rule 38 (cmd)]
    KW_PRINT       [reduce using rule 38 (cmd)]
    KW_RETURN      [reduce using rule 38 (cmd)]
    TK_IDENTIFIER  [reduce using rule 38 (cmd)]
    '{'            [reduce using rule 38 (cmd)]
    $default       reduce using rule 38 (cmd)

    block     go to state 31
    cmd       go to state 134
    flow_cmd  go to state 34


State 125

   45 flow_cmd: KW_WHILE '(' expr ')' cmd .

    $default  reduce using rule 45 (flow_cmd)


State 126

   46 flow_cmd: KW_LOOP '(' TK_IDENTIFIER ':' expr . ',' expr ',' expr ')' cmd
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   63     | expr . '<' expr
   64     | expr . '^' expr
   65     | expr . '|' expr
   66     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 80
    OPERATOR_GE   shift, and go to state 81
    OPERATOR_EQ   shift, and go to state 82
    OPERATOR_DIF  shift, and go to state 83
    '|'           shift, and go to state 84
    '^'           shift, and go to state 85
    '~'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92
    ','           shift, and go to state 135


State 127

   48 expr: TK_IDENTIFIER '[' expr ']' .

    $default  reduce using rule 48 (expr)


State 128

   72 foo_call_args_lst: ',' . expr foo_call_args_lst

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52

    expr      go to state 136
    foo_call  go to state 55


State 129

   71 foo_call_args: expr foo_call_args_lst .

    $default  reduce using rule 71 (foo_call_args)


State 130

   70 foo_call: TK_IDENTIFIER '(' foo_call_args ')' .

    $default  reduce using rule 70 (foo_call)


State 131

   41 print_lst: ',' printable print_lst .

    $default  reduce using rule 41 (print_lst)


State 132

   32 cmd: TK_IDENTIFIER '[' expr ']' '=' . expr

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52

    expr      go to state 137
    foo_call  go to state 55


State 133

   17 vec_def: ':' init_lits . vec_def_lst

    LIT_INTEGER  shift, and go to state 61
    LIT_FLOAT    shift, and go to state 62
    LIT_TRUE     shift, and go to state 63
    LIT_FALSE    shift, and go to state 64
    LIT_CHAR     shift, and go to state 65

    $default  reduce using rule 20 (vec_def_lst)

    init_lits    go to state 138
    vec_def_lst  go to state 139


State 134

   43 flow_cmd: KW_IF '(' expr ')' KW_THEN cmd .
   44         | KW_IF '(' expr ')' KW_THEN cmd . KW_ELSE cmd

    KW_ELSE  shift, and go to state 140

    KW_ELSE   [reduce using rule 43 (flow_cmd)]
    $default  reduce using rule 43 (flow_cmd)


State 135

   46 flow_cmd: KW_LOOP '(' TK_IDENTIFIER ':' expr ',' . expr ',' expr ')' cmd

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52

    expr      go to state 141
    foo_call  go to state 55


State 136

   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   63     | expr . '<' expr
   64     | expr . '^' expr
   65     | expr . '|' expr
   66     | expr . '~' expr
   72 foo_call_args_lst: ',' expr . foo_call_args_lst

    OPERATOR_LE   shift, and go to state 80
    OPERATOR_GE   shift, and go to state 81
    OPERATOR_EQ   shift, and go to state 82
    OPERATOR_DIF  shift, and go to state 83
    '|'           shift, and go to state 84
    '^'           shift, and go to state 85
    '~'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92
    ','           shift, and go to state 128

    $default  reduce using rule 73 (foo_call_args_lst)

    foo_call_args_lst  go to state 142


State 137

   32 cmd: TK_IDENTIFIER '[' expr ']' '=' expr .
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   63     | expr . '<' expr
   64     | expr . '^' expr
   65     | expr . '|' expr
   66     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 80
    OPERATOR_GE   shift, and go to state 81
    OPERATOR_EQ   shift, and go to state 82
    OPERATOR_DIF  shift, and go to state 83
    '|'           shift, and go to state 84
    '^'           shift, and go to state 85
    '~'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92

    $default  reduce using rule 32 (cmd)


State 138

   19 vec_def_lst: init_lits . vec_def_lst

    LIT_INTEGER  shift, and go to state 61
    LIT_FLOAT    shift, and go to state 62
    LIT_TRUE     shift, and go to state 63
    LIT_FALSE    shift, and go to state 64
    LIT_CHAR     shift, and go to state 65

    $default  reduce using rule 20 (vec_def_lst)

    init_lits    go to state 138
    vec_def_lst  go to state 143


State 139

   17 vec_def: ':' init_lits vec_def_lst .

    $default  reduce using rule 17 (vec_def)


State 140

   44 flow_cmd: KW_IF '(' expr ')' KW_THEN cmd KW_ELSE . cmd

    KW_IF          shift, and go to state 24
    KW_WHILE       shift, and go to state 25
    KW_LOOP        shift, and go to state 26
    KW_READ        shift, and go to state 27
    KW_PRINT       shift, and go to state 28
    KW_RETURN      shift, and go to state 29
    TK_IDENTIFIER  shift, and go to state 30
    '{'            shift, and go to state 12

    KW_IF          [reduce using rule 38 (cmd)]
    KW_WHILE       [reduce using rule 38 (cmd)]
    KW_LOOP        [reduce using rule 38 (cmd)]
    KW_READ        [reduce using rule 38 (cmd)]
    KW_PRINT       [reduce using rule 38 (cmd)]
    KW_RETURN      [reduce using rule 38 (cmd)]
    TK_IDENTIFIER  [reduce using rule 38 (cmd)]
    '{'            [reduce using rule 38 (cmd)]
    $default       reduce using rule 38 (cmd)

    block     go to state 31
    cmd       go to state 144
    flow_cmd  go to state 34


State 141

   46 flow_cmd: KW_LOOP '(' TK_IDENTIFIER ':' expr ',' expr . ',' expr ')' cmd
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   63     | expr . '<' expr
   64     | expr . '^' expr
   65     | expr . '|' expr
   66     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 80
    OPERATOR_GE   shift, and go to state 81
    OPERATOR_EQ   shift, and go to state 82
    OPERATOR_DIF  shift, and go to state 83
    '|'           shift, and go to state 84
    '^'           shift, and go to state 85
    '~'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92
    ','           shift, and go to state 145


State 142

   72 foo_call_args_lst: ',' expr foo_call_args_lst .

    $default  reduce using rule 72 (foo_call_args_lst)


State 143

   19 vec_def_lst: init_lits vec_def_lst .

    $default  reduce using rule 19 (vec_def_lst)


State 144

   44 flow_cmd: KW_IF '(' expr ')' KW_THEN cmd KW_ELSE cmd .

    $default  reduce using rule 44 (flow_cmd)


State 145

   46 flow_cmd: KW_LOOP '(' TK_IDENTIFIER ':' expr ',' expr ',' . expr ')' cmd

    TK_IDENTIFIER  shift, and go to state 45
    LIT_INTEGER    shift, and go to state 46
    LIT_FLOAT      shift, and go to state 47
    LIT_TRUE       shift, and go to state 48
    LIT_FALSE      shift, and go to state 49
    LIT_CHAR       shift, and go to state 50
    '('            shift, and go to state 52

    expr      go to state 146
    foo_call  go to state 55


State 146

   46 flow_cmd: KW_LOOP '(' TK_IDENTIFIER ':' expr ',' expr ',' expr . ')' cmd
   54 expr: expr . '+' expr
   55     | expr . '-' expr
   56     | expr . '*' expr
   57     | expr . '/' expr
   58     | expr . OPERATOR_EQ expr
   59     | expr . OPERATOR_GE expr
   60     | expr . OPERATOR_LE expr
   61     | expr . OPERATOR_DIF expr
   62     | expr . '>' expr
   63     | expr . '<' expr
   64     | expr . '^' expr
   65     | expr . '|' expr
   66     | expr . '~' expr

    OPERATOR_LE   shift, and go to state 80
    OPERATOR_GE   shift, and go to state 81
    OPERATOR_EQ   shift, and go to state 82
    OPERATOR_DIF  shift, and go to state 83
    '|'           shift, and go to state 84
    '^'           shift, and go to state 85
    '~'           shift, and go to state 86
    '<'           shift, and go to state 87
    '>'           shift, and go to state 88
    '+'           shift, and go to state 89
    '-'           shift, and go to state 90
    '*'           shift, and go to state 91
    '/'           shift, and go to state 92
    ')'           shift, and go to state 147


State 147

   46 flow_cmd: KW_LOOP '(' TK_IDENTIFIER ':' expr ',' expr ',' expr ')' . cmd

    KW_IF          shift, and go to state 24
    KW_WHILE       shift, and go to state 25
    KW_LOOP        shift, and go to state 26
    KW_READ        shift, and go to state 27
    KW_PRINT       shift, and go to state 28
    KW_RETURN      shift, and go to state 29
    TK_IDENTIFIER  shift, and go to state 30
    '{'            shift, and go to state 12

    KW_IF          [reduce using rule 38 (cmd)]
    KW_WHILE       [reduce using rule 38 (cmd)]
    KW_LOOP        [reduce using rule 38 (cmd)]
    KW_READ        [reduce using rule 38 (cmd)]
    KW_PRINT       [reduce using rule 38 (cmd)]
    KW_RETURN      [reduce using rule 38 (cmd)]
    TK_IDENTIFIER  [reduce using rule 38 (cmd)]
    '{'            [reduce using rule 38 (cmd)]
    $default       reduce using rule 38 (cmd)

    block     go to state 31
    cmd       go to state 148
    flow_cmd  go to state 34


State 148

   46 flow_cmd: KW_LOOP '(' TK_IDENTIFIER ':' expr ',' expr ',' expr ')' cmd .

    $default  reduce using rule 46 (flow_cmd)
